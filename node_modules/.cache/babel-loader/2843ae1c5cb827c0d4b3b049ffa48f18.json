{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport React from 'react';\nimport reactCSS from 'reactcss';\nimport { ColorWrap, Alpha } from '../common';\nimport AlphaPointer from './AlphaPointer';\nexport var AlphaPicker = function AlphaPicker(_ref) {\n  var rgb = _ref.rgb,\n      hsl = _ref.hsl,\n      width = _ref.width,\n      height = _ref.height,\n      onChange = _ref.onChange,\n      direction = _ref.direction,\n      style = _ref.style,\n      renderers = _ref.renderers,\n      pointer = _ref.pointer,\n      _ref$className = _ref.className,\n      className = _ref$className === undefined ? '' : _ref$className;\n  var styles = reactCSS({\n    'default': {\n      picker: {\n        position: 'relative',\n        width: width,\n        height: height\n      },\n      alpha: {\n        radius: '2px',\n        style: style\n      }\n    }\n  });\n  return React.createElement('div', {\n    style: styles.picker,\n    className: 'alpha-picker ' + className\n  }, React.createElement(Alpha, _extends({}, styles.alpha, {\n    rgb: rgb,\n    hsl: hsl,\n    pointer: pointer,\n    renderers: renderers,\n    onChange: onChange,\n    direction: direction\n  })));\n};\nAlphaPicker.defaultProps = {\n  width: '316px',\n  height: '16px',\n  direction: 'horizontal',\n  pointer: AlphaPointer\n};\nexport default ColorWrap(AlphaPicker);","map":{"version":3,"sources":["/Users/tiffany/Documents/projects/ff-brand-colors-generator/node_modules/react-color/es/components/alpha/Alpha.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","reactCSS","ColorWrap","Alpha","AlphaPointer","AlphaPicker","_ref","rgb","hsl","width","height","onChange","direction","style","renderers","pointer","_ref$className","className","undefined","styles","picker","position","alpha","radius","createElement","defaultProps"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;;AAEA,OAAOS,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,WAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAO,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AAClD,MAAIC,GAAG,GAAGD,IAAI,CAACC,GAAf;AAAA,MACIC,GAAG,GAAGF,IAAI,CAACE,GADf;AAAA,MAEIC,KAAK,GAAGH,IAAI,CAACG,KAFjB;AAAA,MAGIC,MAAM,GAAGJ,IAAI,CAACI,MAHlB;AAAA,MAIIC,QAAQ,GAAGL,IAAI,CAACK,QAJpB;AAAA,MAKIC,SAAS,GAAGN,IAAI,CAACM,SALrB;AAAA,MAMIC,KAAK,GAAGP,IAAI,CAACO,KANjB;AAAA,MAOIC,SAAS,GAAGR,IAAI,CAACQ,SAPrB;AAAA,MAQIC,OAAO,GAAGT,IAAI,CAACS,OARnB;AAAA,MASIC,cAAc,GAAGV,IAAI,CAACW,SAT1B;AAAA,MAUIA,SAAS,GAAGD,cAAc,KAAKE,SAAnB,GAA+B,EAA/B,GAAoCF,cAVpD;AAYA,MAAIG,MAAM,GAAGlB,QAAQ,CAAC;AACpB,eAAW;AACTmB,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE,UADJ;AAENZ,QAAAA,KAAK,EAAEA,KAFD;AAGNC,QAAAA,MAAM,EAAEA;AAHF,OADC;AAMTY,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,KADH;AAELV,QAAAA,KAAK,EAAEA;AAFF;AANE;AADS,GAAD,CAArB;AAcA,SAAOb,KAAK,CAACwB,aAAN,CACL,KADK,EAEL;AAAEX,IAAAA,KAAK,EAAEM,MAAM,CAACC,MAAhB;AAAwBH,IAAAA,SAAS,EAAE,kBAAkBA;AAArD,GAFK,EAGLjB,KAAK,CAACwB,aAAN,CAAoBrB,KAApB,EAA2Bf,QAAQ,CAAC,EAAD,EAAK+B,MAAM,CAACG,KAAZ,EAAmB;AACpDf,IAAAA,GAAG,EAAEA,GAD+C;AAEpDC,IAAAA,GAAG,EAAEA,GAF+C;AAGpDO,IAAAA,OAAO,EAAEA,OAH2C;AAIpDD,IAAAA,SAAS,EAAEA,SAJyC;AAKpDH,IAAAA,QAAQ,EAAEA,QAL0C;AAMpDC,IAAAA,SAAS,EAAEA;AANyC,GAAnB,CAAnC,CAHK,CAAP;AAYD,CAvCM;AAyCPP,WAAW,CAACoB,YAAZ,GAA2B;AACzBhB,EAAAA,KAAK,EAAE,OADkB;AAEzBC,EAAAA,MAAM,EAAE,MAFiB;AAGzBE,EAAAA,SAAS,EAAE,YAHc;AAIzBG,EAAAA,OAAO,EAAEX;AAJgB,CAA3B;AAOA,eAAeF,SAAS,CAACG,WAAD,CAAxB","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport React from 'react';\nimport reactCSS from 'reactcss';\n\nimport { ColorWrap, Alpha } from '../common';\nimport AlphaPointer from './AlphaPointer';\n\nexport var AlphaPicker = function AlphaPicker(_ref) {\n  var rgb = _ref.rgb,\n      hsl = _ref.hsl,\n      width = _ref.width,\n      height = _ref.height,\n      onChange = _ref.onChange,\n      direction = _ref.direction,\n      style = _ref.style,\n      renderers = _ref.renderers,\n      pointer = _ref.pointer,\n      _ref$className = _ref.className,\n      className = _ref$className === undefined ? '' : _ref$className;\n\n  var styles = reactCSS({\n    'default': {\n      picker: {\n        position: 'relative',\n        width: width,\n        height: height\n      },\n      alpha: {\n        radius: '2px',\n        style: style\n      }\n    }\n  });\n\n  return React.createElement(\n    'div',\n    { style: styles.picker, className: 'alpha-picker ' + className },\n    React.createElement(Alpha, _extends({}, styles.alpha, {\n      rgb: rgb,\n      hsl: hsl,\n      pointer: pointer,\n      renderers: renderers,\n      onChange: onChange,\n      direction: direction\n    }))\n  );\n};\n\nAlphaPicker.defaultProps = {\n  width: '316px',\n  height: '16px',\n  direction: 'horizontal',\n  pointer: AlphaPointer\n};\n\nexport default ColorWrap(AlphaPicker);"]},"metadata":{},"sourceType":"module"}