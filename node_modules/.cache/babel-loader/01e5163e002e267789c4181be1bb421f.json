{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport reactCSS from 'reactcss';\nimport merge from 'lodash-es/merge';\nimport { ColorWrap, Saturation, Hue } from '../common';\nimport GooglePointerCircle from './GooglePointerCircle';\nimport GooglePointer from './GooglePointer';\nimport GoogleFields from './GoogleFields';\nexport var Google = function Google(_ref) {\n  var width = _ref.width,\n      onChange = _ref.onChange,\n      rgb = _ref.rgb,\n      hsl = _ref.hsl,\n      hsv = _ref.hsv,\n      hex = _ref.hex,\n      header = _ref.header,\n      _ref$styles = _ref.styles,\n      passedStyles = _ref$styles === undefined ? {} : _ref$styles,\n      _ref$className = _ref.className,\n      className = _ref$className === undefined ? '' : _ref$className;\n  var styles = reactCSS(merge({\n    'default': {\n      picker: {\n        width: width,\n        background: '#fff',\n        border: '1px solid #dfe1e5',\n        boxSizing: 'initial',\n        display: 'flex',\n        flexWrap: 'wrap',\n        borderRadius: '8px 8px 0px 0px'\n      },\n      head: {\n        height: '57px',\n        width: '100%',\n        paddingTop: '16px',\n        paddingBottom: '16px',\n        paddingLeft: '16px',\n        fontSize: '20px',\n        boxSizing: 'border-box',\n        fontFamily: 'Roboto-Regular,HelveticaNeue,Arial,sans-serif'\n      },\n      saturation: {\n        width: '70%',\n        padding: '0px',\n        position: 'relative',\n        overflow: 'hidden'\n      },\n      swatch: {\n        width: '30%',\n        height: '228px',\n        padding: '0px',\n        background: 'rgba(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ', 1)',\n        position: 'relative',\n        overflow: 'hidden'\n      },\n      body: {\n        margin: 'auto',\n        width: '95%'\n      },\n      controls: {\n        display: 'flex',\n        boxSizing: 'border-box',\n        height: '52px',\n        paddingTop: '22px'\n      },\n      color: {\n        width: '32px'\n      },\n      hue: {\n        height: '8px',\n        position: 'relative',\n        margin: '0px 16px 0px 16px',\n        width: '100%'\n      },\n      Hue: {\n        radius: '2px'\n      }\n    }\n  }, passedStyles));\n  return React.createElement('div', {\n    style: styles.picker,\n    className: 'google-picker ' + className\n  }, React.createElement('div', {\n    style: styles.head\n  }, header), React.createElement('div', {\n    style: styles.swatch\n  }), React.createElement('div', {\n    style: styles.saturation\n  }, React.createElement(Saturation, {\n    hsl: hsl,\n    hsv: hsv,\n    pointer: GooglePointerCircle,\n    onChange: onChange\n  })), React.createElement('div', {\n    style: styles.body\n  }, React.createElement('div', {\n    style: styles.controls,\n    className: 'flexbox-fix'\n  }, React.createElement('div', {\n    style: styles.hue\n  }, React.createElement(Hue, {\n    style: styles.Hue,\n    hsl: hsl,\n    radius: '4px',\n    pointer: GooglePointer,\n    onChange: onChange\n  }))), React.createElement(GoogleFields, {\n    rgb: rgb,\n    hsl: hsl,\n    hex: hex,\n    hsv: hsv,\n    onChange: onChange\n  })));\n};\nGoogle.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  styles: PropTypes.object,\n  header: PropTypes.string\n};\nGoogle.defaultProps = {\n  width: 652,\n  styles: {},\n  header: 'Color picker'\n};\nexport default ColorWrap(Google);","map":{"version":3,"sources":["/Users/tiffany/Documents/projects/ff-brand-colors-generator/node_modules/react-color/es/components/google/Google.js"],"names":["React","PropTypes","reactCSS","merge","ColorWrap","Saturation","Hue","GooglePointerCircle","GooglePointer","GoogleFields","Google","_ref","width","onChange","rgb","hsl","hsv","hex","header","_ref$styles","styles","passedStyles","undefined","_ref$className","className","picker","background","border","boxSizing","display","flexWrap","borderRadius","head","height","paddingTop","paddingBottom","paddingLeft","fontSize","fontFamily","saturation","padding","position","overflow","swatch","r","g","b","body","margin","controls","color","hue","radius","createElement","style","pointer","propTypes","oneOfType","string","number","object","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport reactCSS from 'reactcss';\nimport merge from 'lodash-es/merge';\n\nimport { ColorWrap, Saturation, Hue } from '../common';\nimport GooglePointerCircle from './GooglePointerCircle';\nimport GooglePointer from './GooglePointer';\nimport GoogleFields from './GoogleFields';\n\nexport var Google = function Google(_ref) {\n  var width = _ref.width,\n      onChange = _ref.onChange,\n      rgb = _ref.rgb,\n      hsl = _ref.hsl,\n      hsv = _ref.hsv,\n      hex = _ref.hex,\n      header = _ref.header,\n      _ref$styles = _ref.styles,\n      passedStyles = _ref$styles === undefined ? {} : _ref$styles,\n      _ref$className = _ref.className,\n      className = _ref$className === undefined ? '' : _ref$className;\n\n  var styles = reactCSS(merge({\n    'default': {\n      picker: {\n        width: width,\n        background: '#fff',\n        border: '1px solid #dfe1e5',\n        boxSizing: 'initial',\n        display: 'flex',\n        flexWrap: 'wrap',\n        borderRadius: '8px 8px 0px 0px'\n      },\n      head: {\n        height: '57px',\n        width: '100%',\n        paddingTop: '16px',\n        paddingBottom: '16px',\n        paddingLeft: '16px',\n        fontSize: '20px',\n        boxSizing: 'border-box',\n        fontFamily: 'Roboto-Regular,HelveticaNeue,Arial,sans-serif'\n      },\n      saturation: {\n        width: '70%',\n        padding: '0px',\n        position: 'relative',\n        overflow: 'hidden'\n      },\n      swatch: {\n        width: '30%',\n        height: '228px',\n        padding: '0px',\n        background: 'rgba(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ', 1)',\n        position: 'relative',\n        overflow: 'hidden'\n      },\n      body: {\n        margin: 'auto',\n        width: '95%'\n      },\n      controls: {\n        display: 'flex',\n        boxSizing: 'border-box',\n        height: '52px',\n        paddingTop: '22px'\n      },\n      color: {\n        width: '32px'\n      },\n      hue: {\n        height: '8px',\n        position: 'relative',\n        margin: '0px 16px 0px 16px',\n        width: '100%'\n      },\n      Hue: {\n        radius: '2px'\n      }\n    }\n  }, passedStyles));\n  return React.createElement(\n    'div',\n    { style: styles.picker, className: 'google-picker ' + className },\n    React.createElement(\n      'div',\n      { style: styles.head },\n      header\n    ),\n    React.createElement('div', { style: styles.swatch }),\n    React.createElement(\n      'div',\n      { style: styles.saturation },\n      React.createElement(Saturation, {\n        hsl: hsl,\n        hsv: hsv,\n        pointer: GooglePointerCircle,\n        onChange: onChange\n      })\n    ),\n    React.createElement(\n      'div',\n      { style: styles.body },\n      React.createElement(\n        'div',\n        { style: styles.controls, className: 'flexbox-fix' },\n        React.createElement(\n          'div',\n          { style: styles.hue },\n          React.createElement(Hue, {\n            style: styles.Hue,\n            hsl: hsl,\n            radius: '4px',\n            pointer: GooglePointer,\n            onChange: onChange\n          })\n        )\n      ),\n      React.createElement(GoogleFields, {\n        rgb: rgb,\n        hsl: hsl,\n        hex: hex,\n        hsv: hsv,\n        onChange: onChange\n      })\n    )\n  );\n};\n\nGoogle.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  styles: PropTypes.object,\n  header: PropTypes.string\n\n};\n\nGoogle.defaultProps = {\n  width: 652,\n  styles: {},\n  header: 'Color picker'\n};\n\nexport default ColorWrap(Google);"]},"metadata":{},"sourceType":"module"}