{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport reactCSS from 'reactcss';\nimport * as color from '../../helpers/color';\nimport { EditableInput } from '../common';\nexport var SketchFields = function SketchFields(_ref) {\n  var onChange = _ref.onChange,\n      rgb = _ref.rgb,\n      hsl = _ref.hsl,\n      hex = _ref.hex,\n      disableAlpha = _ref.disableAlpha;\n  var styles = reactCSS({\n    'default': {\n      fields: {\n        display: 'flex',\n        paddingTop: '4px'\n      },\n      single: {\n        flex: '1',\n        paddingLeft: '6px'\n      },\n      alpha: {\n        flex: '1',\n        paddingLeft: '6px'\n      },\n      double: {\n        flex: '2'\n      },\n      input: {\n        width: '80%',\n        padding: '4px 10% 3px',\n        border: 'none',\n        boxShadow: 'inset 0 0 0 1px #ccc',\n        fontSize: '11px'\n      },\n      label: {\n        display: 'block',\n        textAlign: 'center',\n        fontSize: '11px',\n        color: '#222',\n        paddingTop: '3px',\n        paddingBottom: '4px',\n        textTransform: 'capitalize'\n      }\n    },\n    'disableAlpha': {\n      alpha: {\n        display: 'none'\n      }\n    }\n  }, {\n    disableAlpha: disableAlpha\n  });\n\n  var handleChange = function handleChange(data, e) {\n    if (data.hex) {\n      color.isValidHex(data.hex) && onChange({\n        hex: data.hex,\n        source: 'hex'\n      }, e);\n    } else if (data.r || data.g || data.b) {\n      onChange({\n        r: data.r || rgb.r,\n        g: data.g || rgb.g,\n        b: data.b || rgb.b,\n        a: rgb.a,\n        source: 'rgb'\n      }, e);\n    } else if (data.a) {\n      if (data.a < 0) {\n        data.a = 0;\n      } else if (data.a > 100) {\n        data.a = 100;\n      }\n\n      data.a /= 100;\n      onChange({\n        h: hsl.h,\n        s: hsl.s,\n        l: hsl.l,\n        a: data.a,\n        source: 'rgb'\n      }, e);\n    }\n  };\n\n  return React.createElement('div', {\n    style: styles.fields,\n    className: 'flexbox-fix'\n  }, React.createElement('div', {\n    style: styles.double\n  }, React.createElement(EditableInput, {\n    style: {\n      input: styles.input,\n      label: styles.label\n    },\n    label: 'hex',\n    value: hex.replace('#', ''),\n    onChange: handleChange\n  })), React.createElement('div', {\n    style: styles.single\n  }, React.createElement(EditableInput, {\n    style: {\n      input: styles.input,\n      label: styles.label\n    },\n    label: 'r',\n    value: rgb.r,\n    onChange: handleChange,\n    dragLabel: 'true',\n    dragMax: '255'\n  })), React.createElement('div', {\n    style: styles.single\n  }, React.createElement(EditableInput, {\n    style: {\n      input: styles.input,\n      label: styles.label\n    },\n    label: 'g',\n    value: rgb.g,\n    onChange: handleChange,\n    dragLabel: 'true',\n    dragMax: '255'\n  })), React.createElement('div', {\n    style: styles.single\n  }, React.createElement(EditableInput, {\n    style: {\n      input: styles.input,\n      label: styles.label\n    },\n    label: 'b',\n    value: rgb.b,\n    onChange: handleChange,\n    dragLabel: 'true',\n    dragMax: '255'\n  })), React.createElement('div', {\n    style: styles.alpha\n  }, React.createElement(EditableInput, {\n    style: {\n      input: styles.input,\n      label: styles.label\n    },\n    label: 'a',\n    value: Math.round(rgb.a * 100),\n    onChange: handleChange,\n    dragLabel: 'true',\n    dragMax: '100'\n  })));\n};\nexport default SketchFields;","map":{"version":3,"sources":["/Users/tiffany/Documents/projects/ff-brand-colors-generator/node_modules/react-color/es/components/sketch/SketchFields.js"],"names":["React","reactCSS","color","EditableInput","SketchFields","_ref","onChange","rgb","hsl","hex","disableAlpha","styles","fields","display","paddingTop","single","flex","paddingLeft","alpha","double","input","width","padding","border","boxShadow","fontSize","label","textAlign","paddingBottom","textTransform","handleChange","data","e","isValidHex","source","r","g","b","a","h","s","l","createElement","style","className","value","replace","dragLabel","dragMax","Math","round"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport React from 'react';\nimport reactCSS from 'reactcss';\nimport * as color from '../../helpers/color';\n\nimport { EditableInput } from '../common';\n\nexport var SketchFields = function SketchFields(_ref) {\n  var onChange = _ref.onChange,\n      rgb = _ref.rgb,\n      hsl = _ref.hsl,\n      hex = _ref.hex,\n      disableAlpha = _ref.disableAlpha;\n\n  var styles = reactCSS({\n    'default': {\n      fields: {\n        display: 'flex',\n        paddingTop: '4px'\n      },\n      single: {\n        flex: '1',\n        paddingLeft: '6px'\n      },\n      alpha: {\n        flex: '1',\n        paddingLeft: '6px'\n      },\n      double: {\n        flex: '2'\n      },\n      input: {\n        width: '80%',\n        padding: '4px 10% 3px',\n        border: 'none',\n        boxShadow: 'inset 0 0 0 1px #ccc',\n        fontSize: '11px'\n      },\n      label: {\n        display: 'block',\n        textAlign: 'center',\n        fontSize: '11px',\n        color: '#222',\n        paddingTop: '3px',\n        paddingBottom: '4px',\n        textTransform: 'capitalize'\n      }\n    },\n    'disableAlpha': {\n      alpha: {\n        display: 'none'\n      }\n    }\n  }, { disableAlpha: disableAlpha });\n\n  var handleChange = function handleChange(data, e) {\n    if (data.hex) {\n      color.isValidHex(data.hex) && onChange({\n        hex: data.hex,\n        source: 'hex'\n      }, e);\n    } else if (data.r || data.g || data.b) {\n      onChange({\n        r: data.r || rgb.r,\n        g: data.g || rgb.g,\n        b: data.b || rgb.b,\n        a: rgb.a,\n        source: 'rgb'\n      }, e);\n    } else if (data.a) {\n      if (data.a < 0) {\n        data.a = 0;\n      } else if (data.a > 100) {\n        data.a = 100;\n      }\n\n      data.a /= 100;\n      onChange({\n        h: hsl.h,\n        s: hsl.s,\n        l: hsl.l,\n        a: data.a,\n        source: 'rgb'\n      }, e);\n    }\n  };\n\n  return React.createElement(\n    'div',\n    { style: styles.fields, className: 'flexbox-fix' },\n    React.createElement(\n      'div',\n      { style: styles.double },\n      React.createElement(EditableInput, {\n        style: { input: styles.input, label: styles.label },\n        label: 'hex',\n        value: hex.replace('#', ''),\n        onChange: handleChange\n      })\n    ),\n    React.createElement(\n      'div',\n      { style: styles.single },\n      React.createElement(EditableInput, {\n        style: { input: styles.input, label: styles.label },\n        label: 'r',\n        value: rgb.r,\n        onChange: handleChange,\n        dragLabel: 'true',\n        dragMax: '255'\n      })\n    ),\n    React.createElement(\n      'div',\n      { style: styles.single },\n      React.createElement(EditableInput, {\n        style: { input: styles.input, label: styles.label },\n        label: 'g',\n        value: rgb.g,\n        onChange: handleChange,\n        dragLabel: 'true',\n        dragMax: '255'\n      })\n    ),\n    React.createElement(\n      'div',\n      { style: styles.single },\n      React.createElement(EditableInput, {\n        style: { input: styles.input, label: styles.label },\n        label: 'b',\n        value: rgb.b,\n        onChange: handleChange,\n        dragLabel: 'true',\n        dragMax: '255'\n      })\n    ),\n    React.createElement(\n      'div',\n      { style: styles.alpha },\n      React.createElement(EditableInput, {\n        style: { input: styles.input, label: styles.label },\n        label: 'a',\n        value: Math.round(rgb.a * 100),\n        onChange: handleChange,\n        dragLabel: 'true',\n        dragMax: '100'\n      })\n    )\n  );\n};\n\nexport default SketchFields;"]},"metadata":{},"sourceType":"module"}