{"ast":null,"code":"import React from 'react';\nimport reactCSS from 'reactcss';\nimport * as color from '../../helpers/color';\nimport { EditableInput } from '../common';\nexport var GoogleFields = function GoogleFields(_ref) {\n  var onChange = _ref.onChange,\n      rgb = _ref.rgb,\n      hsl = _ref.hsl,\n      hex = _ref.hex,\n      hsv = _ref.hsv;\n\n  var handleChange = function handleChange(data, e) {\n    if (data.hex) {\n      color.isValidHex(data.hex) && onChange({\n        hex: data.hex,\n        source: 'hex'\n      }, e);\n    } else if (data.rgb) {\n      var values = data.rgb.split(',');\n      color.isvalidColorString(data.rgb, 'rgb') && onChange({\n        r: values[0],\n        g: values[1],\n        b: values[2],\n        a: 1,\n        source: 'rgb'\n      }, e);\n    } else if (data.hsv) {\n      var _values = data.hsv.split(',');\n\n      if (color.isvalidColorString(data.hsv, 'hsv')) {\n        _values[2] = _values[2].replace('%', '');\n        _values[1] = _values[1].replace('%', '');\n        _values[0] = _values[0].replace('°', '');\n\n        if (_values[1] == 1) {\n          _values[1] = 0.01;\n        } else if (_values[2] == 1) {\n          _values[2] = 0.01;\n        }\n\n        onChange({\n          h: Number(_values[0]),\n          s: Number(_values[1]),\n          v: Number(_values[2]),\n          source: 'hsv'\n        }, e);\n      }\n    } else if (data.hsl) {\n      var _values2 = data.hsl.split(',');\n\n      if (color.isvalidColorString(data.hsl, 'hsl')) {\n        _values2[2] = _values2[2].replace('%', '');\n        _values2[1] = _values2[1].replace('%', '');\n        _values2[0] = _values2[0].replace('°', '');\n\n        if (hsvValue[1] == 1) {\n          hsvValue[1] = 0.01;\n        } else if (hsvValue[2] == 1) {\n          hsvValue[2] = 0.01;\n        }\n\n        onChange({\n          h: Number(_values2[0]),\n          s: Number(_values2[1]),\n          v: Number(_values2[2]),\n          source: 'hsl'\n        }, e);\n      }\n    }\n  };\n\n  var styles = reactCSS({\n    'default': {\n      wrap: {\n        display: 'flex',\n        height: '100px',\n        marginTop: '4px'\n      },\n      fields: {\n        width: '100%'\n      },\n      column: {\n        paddingTop: '10px',\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      double: {\n        padding: '0px 4.4px',\n        boxSizing: 'border-box'\n      },\n      input: {\n        width: '100%',\n        height: '38px',\n        boxSizing: 'border-box',\n        padding: '4px 10% 3px',\n        textAlign: 'center',\n        border: '1px solid #dadce0',\n        fontSize: '11px',\n        textTransform: 'lowercase',\n        borderRadius: '5px',\n        outline: 'none',\n        fontFamily: 'Roboto,Arial,sans-serif'\n      },\n      input2: {\n        height: '38px',\n        width: '100%',\n        border: '1px solid #dadce0',\n        boxSizing: 'border-box',\n        fontSize: '11px',\n        textTransform: 'lowercase',\n        borderRadius: '5px',\n        outline: 'none',\n        paddingLeft: '10px',\n        fontFamily: 'Roboto,Arial,sans-serif'\n      },\n      label: {\n        textAlign: 'center',\n        fontSize: '12px',\n        background: '#fff',\n        position: 'absolute',\n        textTransform: 'uppercase',\n        color: '#3c4043',\n        width: '35px',\n        top: '-6px',\n        left: '0',\n        right: '0',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        fontFamily: 'Roboto,Arial,sans-serif'\n      },\n      label2: {\n        left: '10px',\n        textAlign: 'center',\n        fontSize: '12px',\n        background: '#fff',\n        position: 'absolute',\n        textTransform: 'uppercase',\n        color: '#3c4043',\n        width: '32px',\n        top: '-6px',\n        fontFamily: 'Roboto,Arial,sans-serif'\n      },\n      single: {\n        flexGrow: '1',\n        margin: '0px 4.4px'\n      }\n    }\n  });\n  var rgbValue = rgb.r + ', ' + rgb.g + ', ' + rgb.b;\n  var hslValue = Math.round(hsl.h) + '\\xB0, ' + Math.round(hsl.s * 100) + '%, ' + Math.round(hsl.l * 100) + '%';\n  var hsvValue = Math.round(hsv.h) + '\\xB0, ' + Math.round(hsv.s * 100) + '%, ' + Math.round(hsv.v * 100) + '%';\n  return React.createElement('div', {\n    style: styles.wrap,\n    className: 'flexbox-fix'\n  }, React.createElement('div', {\n    style: styles.fields\n  }, React.createElement('div', {\n    style: styles.double\n  }, React.createElement(EditableInput, {\n    style: {\n      input: styles.input,\n      label: styles.label\n    },\n    label: 'hex',\n    value: hex,\n    onChange: handleChange\n  })), React.createElement('div', {\n    style: styles.column\n  }, React.createElement('div', {\n    style: styles.single\n  }, React.createElement(EditableInput, {\n    style: {\n      input: styles.input2,\n      label: styles.label2\n    },\n    label: 'rgb',\n    value: rgbValue,\n    onChange: handleChange\n  })), React.createElement('div', {\n    style: styles.single\n  }, React.createElement(EditableInput, {\n    style: {\n      input: styles.input2,\n      label: styles.label2\n    },\n    label: 'hsv',\n    value: hsvValue,\n    onChange: handleChange\n  })), React.createElement('div', {\n    style: styles.single\n  }, React.createElement(EditableInput, {\n    style: {\n      input: styles.input2,\n      label: styles.label2\n    },\n    label: 'hsl',\n    value: hslValue,\n    onChange: handleChange\n  })))));\n};\nexport default GoogleFields;","map":{"version":3,"sources":["/Users/tiffany/Documents/projects/ff-brand-colors-generator/node_modules/react-color/es/components/google/GoogleFields.js"],"names":["React","reactCSS","color","EditableInput","GoogleFields","_ref","onChange","rgb","hsl","hex","hsv","handleChange","data","e","isValidHex","source","values","split","isvalidColorString","r","g","b","a","_values","replace","h","Number","s","v","_values2","hsvValue","styles","wrap","display","height","marginTop","fields","width","column","paddingTop","justifyContent","double","padding","boxSizing","input","textAlign","border","fontSize","textTransform","borderRadius","outline","fontFamily","input2","paddingLeft","label","background","position","top","left","right","marginLeft","marginRight","label2","single","flexGrow","margin","rgbValue","hslValue","Math","round","l","createElement","style","className","value"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,qBAAvB;AACA,SAASC,aAAT,QAA8B,WAA9B;AAEA,OAAO,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AACpD,MAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,MACIC,GAAG,GAAGF,IAAI,CAACE,GADf;AAAA,MAEIC,GAAG,GAAGH,IAAI,CAACG,GAFf;AAAA,MAGIC,GAAG,GAAGJ,IAAI,CAACI,GAHf;AAAA,MAIIC,GAAG,GAAGL,IAAI,CAACK,GAJf;;AAOA,MAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,CAA5B,EAA+B;AAChD,QAAID,IAAI,CAACH,GAAT,EAAc;AACZP,MAAAA,KAAK,CAACY,UAAN,CAAiBF,IAAI,CAACH,GAAtB,KAA8BH,QAAQ,CAAC;AACrCG,QAAAA,GAAG,EAAEG,IAAI,CAACH,GAD2B;AAErCM,QAAAA,MAAM,EAAE;AAF6B,OAAD,EAGnCF,CAHmC,CAAtC;AAID,KALD,MAKO,IAAID,IAAI,CAACL,GAAT,EAAc;AACnB,UAAIS,MAAM,GAAGJ,IAAI,CAACL,GAAL,CAASU,KAAT,CAAe,GAAf,CAAb;AACAf,MAAAA,KAAK,CAACgB,kBAAN,CAAyBN,IAAI,CAACL,GAA9B,EAAmC,KAAnC,KAA6CD,QAAQ,CAAC;AACpDa,QAAAA,CAAC,EAAEH,MAAM,CAAC,CAAD,CAD2C;AAEpDI,QAAAA,CAAC,EAAEJ,MAAM,CAAC,CAAD,CAF2C;AAGpDK,QAAAA,CAAC,EAAEL,MAAM,CAAC,CAAD,CAH2C;AAIpDM,QAAAA,CAAC,EAAE,CAJiD;AAKpDP,QAAAA,MAAM,EAAE;AAL4C,OAAD,EAMlDF,CANkD,CAArD;AAOD,KATM,MASA,IAAID,IAAI,CAACF,GAAT,EAAc;AACnB,UAAIa,OAAO,GAAGX,IAAI,CAACF,GAAL,CAASO,KAAT,CAAe,GAAf,CAAd;;AACA,UAAIf,KAAK,CAACgB,kBAAN,CAAyBN,IAAI,CAACF,GAA9B,EAAmC,KAAnC,CAAJ,EAA+C;AAC7Ca,QAAAA,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAAP,CAAWC,OAAX,CAAmB,GAAnB,EAAwB,EAAxB,CAAb;AACAD,QAAAA,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAAP,CAAWC,OAAX,CAAmB,GAAnB,EAAwB,EAAxB,CAAb;AACAD,QAAAA,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAAP,CAAWC,OAAX,CAAmB,GAAnB,EAAwB,EAAxB,CAAb;;AACA,YAAID,OAAO,CAAC,CAAD,CAAP,IAAc,CAAlB,EAAqB;AACnBA,UAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,IAAb;AACD,SAFD,MAEO,IAAIA,OAAO,CAAC,CAAD,CAAP,IAAc,CAAlB,EAAqB;AAC1BA,UAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,IAAb;AACD;;AACDjB,QAAAA,QAAQ,CAAC;AACPmB,UAAAA,CAAC,EAAEC,MAAM,CAACH,OAAO,CAAC,CAAD,CAAR,CADF;AAEPI,UAAAA,CAAC,EAAED,MAAM,CAACH,OAAO,CAAC,CAAD,CAAR,CAFF;AAGPK,UAAAA,CAAC,EAAEF,MAAM,CAACH,OAAO,CAAC,CAAD,CAAR,CAHF;AAIPR,UAAAA,MAAM,EAAE;AAJD,SAAD,EAKLF,CALK,CAAR;AAMD;AACF,KAlBM,MAkBA,IAAID,IAAI,CAACJ,GAAT,EAAc;AACnB,UAAIqB,QAAQ,GAAGjB,IAAI,CAACJ,GAAL,CAASS,KAAT,CAAe,GAAf,CAAf;;AACA,UAAIf,KAAK,CAACgB,kBAAN,CAAyBN,IAAI,CAACJ,GAA9B,EAAmC,KAAnC,CAAJ,EAA+C;AAC7CqB,QAAAA,QAAQ,CAAC,CAAD,CAAR,GAAcA,QAAQ,CAAC,CAAD,CAAR,CAAYL,OAAZ,CAAoB,GAApB,EAAyB,EAAzB,CAAd;AACAK,QAAAA,QAAQ,CAAC,CAAD,CAAR,GAAcA,QAAQ,CAAC,CAAD,CAAR,CAAYL,OAAZ,CAAoB,GAApB,EAAyB,EAAzB,CAAd;AACAK,QAAAA,QAAQ,CAAC,CAAD,CAAR,GAAcA,QAAQ,CAAC,CAAD,CAAR,CAAYL,OAAZ,CAAoB,GAApB,EAAyB,EAAzB,CAAd;;AACA,YAAIM,QAAQ,CAAC,CAAD,CAAR,IAAe,CAAnB,EAAsB;AACpBA,UAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,IAAd;AACD,SAFD,MAEO,IAAIA,QAAQ,CAAC,CAAD,CAAR,IAAe,CAAnB,EAAsB;AAC3BA,UAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,IAAd;AACD;;AACDxB,QAAAA,QAAQ,CAAC;AACPmB,UAAAA,CAAC,EAAEC,MAAM,CAACG,QAAQ,CAAC,CAAD,CAAT,CADF;AAEPF,UAAAA,CAAC,EAAED,MAAM,CAACG,QAAQ,CAAC,CAAD,CAAT,CAFF;AAGPD,UAAAA,CAAC,EAAEF,MAAM,CAACG,QAAQ,CAAC,CAAD,CAAT,CAHF;AAIPd,UAAAA,MAAM,EAAE;AAJD,SAAD,EAKLF,CALK,CAAR;AAMD;AACF;AACF,GApDD;;AAsDA,MAAIkB,MAAM,GAAG9B,QAAQ,CAAC;AACpB,eAAW;AACT+B,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE,MADL;AAEJC,QAAAA,MAAM,EAAE,OAFJ;AAGJC,QAAAA,SAAS,EAAE;AAHP,OADG;AAMTC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE;AADD,OANC;AASTC,MAAAA,MAAM,EAAE;AACNC,QAAAA,UAAU,EAAE,MADN;AAENN,QAAAA,OAAO,EAAE,MAFH;AAGNO,QAAAA,cAAc,EAAE;AAHV,OATC;AAcTC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE,WADH;AAENC,QAAAA,SAAS,EAAE;AAFL,OAdC;AAkBTC,MAAAA,KAAK,EAAE;AACLP,QAAAA,KAAK,EAAE,MADF;AAELH,QAAAA,MAAM,EAAE,MAFH;AAGLS,QAAAA,SAAS,EAAE,YAHN;AAILD,QAAAA,OAAO,EAAE,aAJJ;AAKLG,QAAAA,SAAS,EAAE,QALN;AAMLC,QAAAA,MAAM,EAAE,mBANH;AAOLC,QAAAA,QAAQ,EAAE,MAPL;AAQLC,QAAAA,aAAa,EAAE,WARV;AASLC,QAAAA,YAAY,EAAE,KATT;AAULC,QAAAA,OAAO,EAAE,MAVJ;AAWLC,QAAAA,UAAU,EAAE;AAXP,OAlBE;AA+BTC,MAAAA,MAAM,EAAE;AACNlB,QAAAA,MAAM,EAAE,MADF;AAENG,QAAAA,KAAK,EAAE,MAFD;AAGNS,QAAAA,MAAM,EAAE,mBAHF;AAINH,QAAAA,SAAS,EAAE,YAJL;AAKNI,QAAAA,QAAQ,EAAE,MALJ;AAMNC,QAAAA,aAAa,EAAE,WANT;AAONC,QAAAA,YAAY,EAAE,KAPR;AAQNC,QAAAA,OAAO,EAAE,MARH;AASNG,QAAAA,WAAW,EAAE,MATP;AAUNF,QAAAA,UAAU,EAAE;AAVN,OA/BC;AA2CTG,MAAAA,KAAK,EAAE;AACLT,QAAAA,SAAS,EAAE,QADN;AAELE,QAAAA,QAAQ,EAAE,MAFL;AAGLQ,QAAAA,UAAU,EAAE,MAHP;AAILC,QAAAA,QAAQ,EAAE,UAJL;AAKLR,QAAAA,aAAa,EAAE,WALV;AAML9C,QAAAA,KAAK,EAAE,SANF;AAOLmC,QAAAA,KAAK,EAAE,MAPF;AAQLoB,QAAAA,GAAG,EAAE,MARA;AASLC,QAAAA,IAAI,EAAE,GATD;AAULC,QAAAA,KAAK,EAAE,GAVF;AAWLC,QAAAA,UAAU,EAAE,MAXP;AAYLC,QAAAA,WAAW,EAAE,MAZR;AAaLV,QAAAA,UAAU,EAAE;AAbP,OA3CE;AA0DTW,MAAAA,MAAM,EAAE;AACNJ,QAAAA,IAAI,EAAE,MADA;AAENb,QAAAA,SAAS,EAAE,QAFL;AAGNE,QAAAA,QAAQ,EAAE,MAHJ;AAINQ,QAAAA,UAAU,EAAE,MAJN;AAKNC,QAAAA,QAAQ,EAAE,UALJ;AAMNR,QAAAA,aAAa,EAAE,WANT;AAON9C,QAAAA,KAAK,EAAE,SAPD;AAQNmC,QAAAA,KAAK,EAAE,MARD;AASNoB,QAAAA,GAAG,EAAE,MATC;AAUNN,QAAAA,UAAU,EAAE;AAVN,OA1DC;AAsETY,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE,GADJ;AAENC,QAAAA,MAAM,EAAE;AAFF;AAtEC;AADS,GAAD,CAArB;AA8EA,MAAIC,QAAQ,GAAG3D,GAAG,CAACY,CAAJ,GAAQ,IAAR,GAAeZ,GAAG,CAACa,CAAnB,GAAuB,IAAvB,GAA8Bb,GAAG,CAACc,CAAjD;AACA,MAAI8C,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAW7D,GAAG,CAACiB,CAAf,IAAoB,QAApB,GAA+B2C,IAAI,CAACC,KAAL,CAAW7D,GAAG,CAACmB,CAAJ,GAAQ,GAAnB,CAA/B,GAAyD,KAAzD,GAAiEyC,IAAI,CAACC,KAAL,CAAW7D,GAAG,CAAC8D,CAAJ,GAAQ,GAAnB,CAAjE,GAA2F,GAA1G;AACA,MAAIxC,QAAQ,GAAGsC,IAAI,CAACC,KAAL,CAAW3D,GAAG,CAACe,CAAf,IAAoB,QAApB,GAA+B2C,IAAI,CAACC,KAAL,CAAW3D,GAAG,CAACiB,CAAJ,GAAQ,GAAnB,CAA/B,GAAyD,KAAzD,GAAiEyC,IAAI,CAACC,KAAL,CAAW3D,GAAG,CAACkB,CAAJ,GAAQ,GAAnB,CAAjE,GAA2F,GAA1G;AAEA,SAAO5B,KAAK,CAACuE,aAAN,CACL,KADK,EAEL;AAAEC,IAAAA,KAAK,EAAEzC,MAAM,CAACC,IAAhB;AAAsByC,IAAAA,SAAS,EAAE;AAAjC,GAFK,EAGLzE,KAAK,CAACuE,aAAN,CACE,KADF,EAEE;AAAEC,IAAAA,KAAK,EAAEzC,MAAM,CAACK;AAAhB,GAFF,EAGEpC,KAAK,CAACuE,aAAN,CACE,KADF,EAEE;AAAEC,IAAAA,KAAK,EAAEzC,MAAM,CAACU;AAAhB,GAFF,EAGEzC,KAAK,CAACuE,aAAN,CAAoBpE,aAApB,EAAmC;AACjCqE,IAAAA,KAAK,EAAE;AAAE5B,MAAAA,KAAK,EAAEb,MAAM,CAACa,KAAhB;AAAuBU,MAAAA,KAAK,EAAEvB,MAAM,CAACuB;AAArC,KAD0B;AAEjCA,IAAAA,KAAK,EAAE,KAF0B;AAGjCoB,IAAAA,KAAK,EAAEjE,GAH0B;AAIjCH,IAAAA,QAAQ,EAAEK;AAJuB,GAAnC,CAHF,CAHF,EAaEX,KAAK,CAACuE,aAAN,CACE,KADF,EAEE;AAAEC,IAAAA,KAAK,EAAEzC,MAAM,CAACO;AAAhB,GAFF,EAGEtC,KAAK,CAACuE,aAAN,CACE,KADF,EAEE;AAAEC,IAAAA,KAAK,EAAEzC,MAAM,CAACgC;AAAhB,GAFF,EAGE/D,KAAK,CAACuE,aAAN,CAAoBpE,aAApB,EAAmC;AACjCqE,IAAAA,KAAK,EAAE;AAAE5B,MAAAA,KAAK,EAAEb,MAAM,CAACqB,MAAhB;AAAwBE,MAAAA,KAAK,EAAEvB,MAAM,CAAC+B;AAAtC,KAD0B;AAEjCR,IAAAA,KAAK,EAAE,KAF0B;AAGjCoB,IAAAA,KAAK,EAAER,QAH0B;AAIjC5D,IAAAA,QAAQ,EAAEK;AAJuB,GAAnC,CAHF,CAHF,EAaEX,KAAK,CAACuE,aAAN,CACE,KADF,EAEE;AAAEC,IAAAA,KAAK,EAAEzC,MAAM,CAACgC;AAAhB,GAFF,EAGE/D,KAAK,CAACuE,aAAN,CAAoBpE,aAApB,EAAmC;AACjCqE,IAAAA,KAAK,EAAE;AAAE5B,MAAAA,KAAK,EAAEb,MAAM,CAACqB,MAAhB;AAAwBE,MAAAA,KAAK,EAAEvB,MAAM,CAAC+B;AAAtC,KAD0B;AAEjCR,IAAAA,KAAK,EAAE,KAF0B;AAGjCoB,IAAAA,KAAK,EAAE5C,QAH0B;AAIjCxB,IAAAA,QAAQ,EAAEK;AAJuB,GAAnC,CAHF,CAbF,EAuBEX,KAAK,CAACuE,aAAN,CACE,KADF,EAEE;AAAEC,IAAAA,KAAK,EAAEzC,MAAM,CAACgC;AAAhB,GAFF,EAGE/D,KAAK,CAACuE,aAAN,CAAoBpE,aAApB,EAAmC;AACjCqE,IAAAA,KAAK,EAAE;AAAE5B,MAAAA,KAAK,EAAEb,MAAM,CAACqB,MAAhB;AAAwBE,MAAAA,KAAK,EAAEvB,MAAM,CAAC+B;AAAtC,KAD0B;AAEjCR,IAAAA,KAAK,EAAE,KAF0B;AAGjCoB,IAAAA,KAAK,EAAEP,QAH0B;AAIjC7D,IAAAA,QAAQ,EAAEK;AAJuB,GAAnC,CAHF,CAvBF,CAbF,CAHK,CAAP;AAoDD,CApMM;AAsMP,eAAeP,YAAf","sourcesContent":["import React from 'react';\nimport reactCSS from 'reactcss';\nimport * as color from '../../helpers/color';\nimport { EditableInput } from '../common';\n\nexport var GoogleFields = function GoogleFields(_ref) {\n  var onChange = _ref.onChange,\n      rgb = _ref.rgb,\n      hsl = _ref.hsl,\n      hex = _ref.hex,\n      hsv = _ref.hsv;\n\n\n  var handleChange = function handleChange(data, e) {\n    if (data.hex) {\n      color.isValidHex(data.hex) && onChange({\n        hex: data.hex,\n        source: 'hex'\n      }, e);\n    } else if (data.rgb) {\n      var values = data.rgb.split(',');\n      color.isvalidColorString(data.rgb, 'rgb') && onChange({\n        r: values[0],\n        g: values[1],\n        b: values[2],\n        a: 1,\n        source: 'rgb'\n      }, e);\n    } else if (data.hsv) {\n      var _values = data.hsv.split(',');\n      if (color.isvalidColorString(data.hsv, 'hsv')) {\n        _values[2] = _values[2].replace('%', '');\n        _values[1] = _values[1].replace('%', '');\n        _values[0] = _values[0].replace('°', '');\n        if (_values[1] == 1) {\n          _values[1] = 0.01;\n        } else if (_values[2] == 1) {\n          _values[2] = 0.01;\n        }\n        onChange({\n          h: Number(_values[0]),\n          s: Number(_values[1]),\n          v: Number(_values[2]),\n          source: 'hsv'\n        }, e);\n      }\n    } else if (data.hsl) {\n      var _values2 = data.hsl.split(',');\n      if (color.isvalidColorString(data.hsl, 'hsl')) {\n        _values2[2] = _values2[2].replace('%', '');\n        _values2[1] = _values2[1].replace('%', '');\n        _values2[0] = _values2[0].replace('°', '');\n        if (hsvValue[1] == 1) {\n          hsvValue[1] = 0.01;\n        } else if (hsvValue[2] == 1) {\n          hsvValue[2] = 0.01;\n        }\n        onChange({\n          h: Number(_values2[0]),\n          s: Number(_values2[1]),\n          v: Number(_values2[2]),\n          source: 'hsl'\n        }, e);\n      }\n    }\n  };\n\n  var styles = reactCSS({\n    'default': {\n      wrap: {\n        display: 'flex',\n        height: '100px',\n        marginTop: '4px'\n      },\n      fields: {\n        width: '100%'\n      },\n      column: {\n        paddingTop: '10px',\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      double: {\n        padding: '0px 4.4px',\n        boxSizing: 'border-box'\n      },\n      input: {\n        width: '100%',\n        height: '38px',\n        boxSizing: 'border-box',\n        padding: '4px 10% 3px',\n        textAlign: 'center',\n        border: '1px solid #dadce0',\n        fontSize: '11px',\n        textTransform: 'lowercase',\n        borderRadius: '5px',\n        outline: 'none',\n        fontFamily: 'Roboto,Arial,sans-serif'\n      },\n      input2: {\n        height: '38px',\n        width: '100%',\n        border: '1px solid #dadce0',\n        boxSizing: 'border-box',\n        fontSize: '11px',\n        textTransform: 'lowercase',\n        borderRadius: '5px',\n        outline: 'none',\n        paddingLeft: '10px',\n        fontFamily: 'Roboto,Arial,sans-serif'\n      },\n      label: {\n        textAlign: 'center',\n        fontSize: '12px',\n        background: '#fff',\n        position: 'absolute',\n        textTransform: 'uppercase',\n        color: '#3c4043',\n        width: '35px',\n        top: '-6px',\n        left: '0',\n        right: '0',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        fontFamily: 'Roboto,Arial,sans-serif'\n      },\n      label2: {\n        left: '10px',\n        textAlign: 'center',\n        fontSize: '12px',\n        background: '#fff',\n        position: 'absolute',\n        textTransform: 'uppercase',\n        color: '#3c4043',\n        width: '32px',\n        top: '-6px',\n        fontFamily: 'Roboto,Arial,sans-serif'\n      },\n      single: {\n        flexGrow: '1',\n        margin: '0px 4.4px'\n      }\n    }\n  });\n\n  var rgbValue = rgb.r + ', ' + rgb.g + ', ' + rgb.b;\n  var hslValue = Math.round(hsl.h) + '\\xB0, ' + Math.round(hsl.s * 100) + '%, ' + Math.round(hsl.l * 100) + '%';\n  var hsvValue = Math.round(hsv.h) + '\\xB0, ' + Math.round(hsv.s * 100) + '%, ' + Math.round(hsv.v * 100) + '%';\n\n  return React.createElement(\n    'div',\n    { style: styles.wrap, className: 'flexbox-fix' },\n    React.createElement(\n      'div',\n      { style: styles.fields },\n      React.createElement(\n        'div',\n        { style: styles.double },\n        React.createElement(EditableInput, {\n          style: { input: styles.input, label: styles.label },\n          label: 'hex',\n          value: hex,\n          onChange: handleChange\n        })\n      ),\n      React.createElement(\n        'div',\n        { style: styles.column },\n        React.createElement(\n          'div',\n          { style: styles.single },\n          React.createElement(EditableInput, {\n            style: { input: styles.input2, label: styles.label2 },\n            label: 'rgb',\n            value: rgbValue,\n            onChange: handleChange\n          })\n        ),\n        React.createElement(\n          'div',\n          { style: styles.single },\n          React.createElement(EditableInput, {\n            style: { input: styles.input2, label: styles.label2 },\n            label: 'hsv',\n            value: hsvValue,\n            onChange: handleChange\n          })\n        ),\n        React.createElement(\n          'div',\n          { style: styles.single },\n          React.createElement(EditableInput, {\n            style: { input: styles.input2, label: styles.label2 },\n            label: 'hsl',\n            value: hslValue,\n            onChange: handleChange\n          })\n        )\n      )\n    )\n  );\n};\n\nexport default GoogleFields;"]},"metadata":{},"sourceType":"module"}