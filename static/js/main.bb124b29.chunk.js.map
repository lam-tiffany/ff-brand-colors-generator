{"version":3,"sources":["components/Color.js","App.js","reportWebVitals.js","index.js"],"names":["Color","props","color","className","style","backgroundColor","App","state","primary","gradientDark","copied","handleChangeComplete","newPrimary","newGradientDark","tinycolor","hex","darken","toString","setState","handleCopyText","e","preventDefault","navigator","clipboard","writeText","this","role","aria-label","colors","triangle","onChangeComplete","type","id","name","value","onClick","disabled","href","target","rel","title","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAWeA,EATD,SAACC,GAAW,IAEdC,EAASD,EAATC,MACR,OACE,qBAAKC,UAAU,cAAcC,MAAO,CAAEC,gBAAiBH,MCkE9CI,E,4MAjEbC,MAAQ,CACNC,QAAS,UACTC,aAAc,UACdC,QAAQ,G,EAGVC,qBAAuB,SAACC,GACtB,IAAMC,EAAkBC,IAAUF,EAAWG,KAAKC,OAAO,MAAMC,WAC/D,EAAKC,SAAL,2BACK,EAAKX,OADV,IAEEC,QAASI,EACTH,aAAcI,EACdH,QAAQ,M,EAIZS,eAAiB,SAACC,GAChBA,EAAEC,iBACFC,UAAUC,UAAUC,UAAU,EAAKjB,MAAME,cACzC,EAAKS,SAAL,2BAAmB,EAAKX,OAAxB,IAA+BG,QAAQ,M,uDAI/B,IAAD,EACmCe,KAAKlB,MAAvCC,EADD,EACCA,QAASC,EADV,EACUA,aAAcC,EADxB,EACwBA,OAC/B,OACE,sBAAKP,UAAU,MAAf,UACE,mCACE,0DAC0B,sBAAMuB,KAAK,MAAMC,aAAW,SAA5B,2DAE1B,2GACA,0BAEF,iCACE,iCACE,yEAA2C,0DACzC,cAAC,IAAD,CACIzB,MAAOM,EACPoB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACnKC,SAAS,OACTC,iBAAkBL,KAAKd,0BAG/B,iCACE,8EAAgD,iDAA0B,cAAC,EAAD,CAAOT,MAAOO,OACxF,uBAAON,UAAU,YAAY4B,KAAK,OAAOC,GAAG,gBAAgBC,KAAK,gBAAgBC,MAAOzB,IACxF,uBAAON,UAAU,MAAM4B,KAAK,SAASG,MAAQxB,EAAkB,UAAT,OAAoByB,QAASV,KAAKN,eAAgBiB,WAAU1B,OAEpH,yFACA,0BAEF,iCACE,4BAAG,+CACS,mBAAGP,UAAU,WAAWkC,KAAK,sCAAsCC,OAAO,SAASC,IAAI,aAAaC,MAAM,8BAA1G,uBADT,QACmK,mBAAGrC,UAAU,WAAWkC,KAAK,8CAA8CC,OAAO,SAASC,IAAI,aAAaC,MAAM,4BAAlH,yBADnK,IAED,uBAFC,eAGW,mBAAGrC,UAAU,WAAWkC,KAAK,qDAAqDC,OAAO,SAASC,IAAI,aAAaC,MAAM,kCAAzH,6CAHX,8C,GAtDKC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.bb124b29.chunk.js","sourcesContent":["import React from 'react';\n\nconst Color = (props) => {\n\n    const { color} = props;\n    return (\n      <div className='color-block' style={{ backgroundColor: color }}>\n      </div>\n    );\n}\n\nexport default Color;\n","import './App.css';\nimport tinycolor from 'tinycolor2';\nimport React, { Component } from 'react';\nimport { BlockPicker } from 'react-color';\nimport Color from './components/Color';\n\nclass App extends Component {\n  state = {\n    primary: '#794CFF',\n    gradientDark: '#480BFF',\n    copied: false\n  }\n\n  handleChangeComplete = (newPrimary) => {\n    const newGradientDark = tinycolor(newPrimary.hex).darken(12.8).toString();\n    this.setState({\n      ...this.state,\n      primary: newPrimary,\n      gradientDark: newGradientDark,\n      copied: false\n    });\n  }\n\n  handleCopyText = (e) => {\n    e.preventDefault();\n    navigator.clipboard.writeText(this.state.gradientDark);\n    this.setState({ ...this.state, copied: true });\n  };\n  \n\n  render() {\n    const { primary, gradientDark, copied } = this.state;\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>\n            Brand Colors Generator  <span role=\"img\" aria-label=\"artist\">üßëüèª‚Äçüé®</span>\n          </h1>\n          <p>A tool for generating non-primary branded colors required in the FFAI app.</p>\n          <hr/>\n        </header>\n        <main>\n          <form>\n            <label>1) Select or input hex code of your <code>brand-primary-color</code></label>\n              <BlockPicker\n                  color={primary}\n                  colors={['#794CFF', '#005DAA', '#BF9E66', '#3498DB', '#ED0722', '#54b848', '#D9E3F0', '#F47373', '#697689', '#37D67A', '#2CCCE4', '#555555', '#dce775', '#ff8a65', '#ba68c8' ]}\n                  triangle='hide'\n                  onChangeComplete={this.handleChangeComplete}\n              />\n          </form>\n          <form>\n            <label>2) Preview and copy the hex code of your <code>gradient-dark</code><Color color={gradientDark} /></label>\n            <input className='text-area' type=\"text\" id=\"gradient-dark\" name=\"gradient-dark\" value={gradientDark} />\n            <input className='btn' type=\"submit\" value={!copied ? 'Copy' : 'Copied!'} onClick={this.handleCopyText} disabled={copied ? true : false}/> \n          </form>\n          <p>3) You're all set! ü•≥ See you again next time.</p>\n          <hr />\n        </main>\n        <footer>\n          <p><small>\n            Made with <a className='App-link' href='https://github.com/bgrins/TinyColor' target='_blank' rel=\"noreferrer\" title='TinyColor Github repository'>TinyColor</a> and <a className='App-link' href='https://casesandberg.github.io/react-color/' target='_blank' rel=\"noreferrer\" title='React-Color official page'>React-Color</a>.\n            <br />\n            Inspired by <a className='App-link' href='https://nicothin.pro/lessColourFunctionCalculator/' target='_blank' rel=\"noreferrer\" title='LESS Colour Function Calculator'>LESS Colour Function Calculator</a> and my teammates' struggles.\n          </small></p>\n        </footer>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}